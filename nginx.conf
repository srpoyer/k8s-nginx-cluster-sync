load_module modules/ngx_http_js_module.so;
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
    gunzip on; # Decompress IdP responses if necessary
    proxy_cache_path /var/cache/nginx/jwk levels=1 keys_zone=jwk:1m max_size=10m;
    js_import conf.d/subreq.js;
}


# TCP/UDP proxy and load balancing block
#
stream {
    # Example configuration for TCP load balancing

    #upstream stream_backend {
    #    zone tcp_servers 64k;
    #    server backend1.example.com:12345;
    #    server backend2.example.com:12345;
    #}

    server {
	zone_sync;
        listen 9000;
        zone_sync_interval 1ms;
	zone_sync_server 172.16.96.2:9000;
	zone_sync_server 172.16.96.3:9000;
    #    status_zone tcp_server;
    #    proxy_pass stream_backend;
    }
    include /etc/nginx/stream_conf.d/*.conf;

}
